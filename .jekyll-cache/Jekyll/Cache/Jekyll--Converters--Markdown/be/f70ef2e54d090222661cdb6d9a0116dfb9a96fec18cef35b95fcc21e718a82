I",<p>Today Iâ€™m going to write about creating an <a href="https://www.r-project.org/">R</a> package ðŸ“¦. Itâ€™s very easy, and something I should have learnt a long time ago. Before I start, here are a couple of very good tutorials for creating an R package:</p>
<ul>
  <li><a href="https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/">Writing an R package from scratch</a></li>
  <li><a href="http://r-pkgs.had.co.nz/description.html">Hadley Wickhamâ€™s R package documentation</a></li>
</ul>

<p><strong>Why bother?</strong> If youâ€™re like me and you still havenâ€™t embraced creating your own R packages then youâ€™ll be asking this question. It is going to save you <em>SO MUCH</em> time and make your code cleaner and easier to use. Get on with it!</p>

<p><strong>Why does it save you time?</strong> Functions in an R package are in one place and documented. Packages are easy for other people to install and use.</p>

<p>Lastly, <strong>packages are the building blocks of the R world</strong>. By creating your own, youâ€™ve joined the community of people continuing to make R the amazing language that it is. So letâ€™s get started!</p>

<p>To get started, youâ€™ll need to install and load a couple of packages:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Install necessary packages</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">install.packages</span><span class="p">(</span><span class="s2">"digest"</span><span class="p">)</span><span class="w">
</span><span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"klutometis/roxygen"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Load them</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"roxygen2"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Then create the package folder:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">packageDirectory</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">file.path</span><span class="p">(</span><span class="s2">"basicPlotteR"</span><span class="p">)</span><span class="w">
</span><span class="n">create</span><span class="p">(</span><span class="n">packageDirectory</span><span class="p">)</span><span class="w">
</span><span class="n">setwd</span><span class="p">(</span><span class="n">packageDirectory</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Iâ€™m creating an R package for the code I wrote for a few functions Iâ€™ve developed to help with plotting in R. My package is going to be called <a href="https://josephcrispell.github.io/projects/basicplotter">basicPlotteR</a>.</p>

<p>So, weâ€™ve created our package directory. If you navigate to the directory youâ€™ll find the following:<br /></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">R/</code> - The directory where you are going to put the code for your R functions. Each function can have itâ€™s own file (<code class="language-plaintext highlighter-rouge">functionName.R</code>), or you can chuck all your functions into a single file (<code class="language-plaintext highlighter-rouge">packageName.R</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">basicPlotteR.Rproj</code> - Some information for R about your package</li>
  <li><code class="language-plaintext highlighter-rouge">DESCRIPTION</code> - Take a look, itâ€™s got the information about your package. See the contents of this file below.</li>
  <li><code class="language-plaintext highlighter-rouge">NAMESPACE</code> - A file telling R which functions to provide documentation for with the R package.</li>
  <li><code class="language-plaintext highlighter-rouge">.gitignore</code> - A file to be used if youâ€™re putting your package on github, as the name suggests itâ€™s what you donâ€™t want to put on github.</li>
  <li><code class="language-plaintext highlighter-rouge">.Rbuildignore</code> - A file noting what is to be ignored when youâ€™re building the R package.</li>
</ul>

<p>The DESCRIPTION file. It has the following lines, which I have edited for my package:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Package: basicPlotteR
Title: A collection of tools to help with base R plotting
Version: 0.0.0.9000
Authors@R: person("Joseph", "Crispell", email = "JosephCrispell@gmail.com", role = "cre")
Description: An R package containing all the tools I have developed to make plotting with base R a little easier
Depends: R (&gt;= 3.4.4)
License: GPL-3
Encoding: UTF-8
LazyData: true
</code></pre></div></div>

<p>Right, back to working on the package. The first thing we want to do is add some functions. Here is a general format for a function:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cd">#' Short title for function</span><span class="w">
</span><span class="cd">#'</span><span class="w">
</span><span class="cd">#' Longer description of the function</span><span class="w">
</span><span class="cd">#' @param first An object of class "?". Describe each input parameter</span><span class="w">
</span><span class="cd">#' @param second An object of class "?". Describe each input parameter</span><span class="w">
</span><span class="cd">#' @keywords Add some good keywords for your function here</span><span class="w">
</span><span class="cd">#' @return Returns an object of class "?". Describe what the function returns</span><span class="w">
</span><span class="cd">#' @export</span><span class="w">
</span><span class="cd">#' @examples</span><span class="w">
</span><span class="cd">#' # Add some code here illustrating how to use the function</span><span class="w">
</span><span class="n">functionName</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">first</span><span class="p">,</span><span class="w"> </span><span class="n">second</span><span class="p">){</span><span class="w">
	</span><span class="c1"># Some code here</span><span class="w">
	</span><span class="nf">return</span><span class="p">(</span><span class="n">something</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The code for the function is the same as for any function, but there is lotâ€™s of information about the function above it. The weird <code class="language-plaintext highlighter-rouge">#'</code> is a special comment that roxygen recognises. Roxygen is the package that weâ€™re using for our build.</p>

<p>Functions can be saved in a R script and put in the <code class="language-plaintext highlighter-rouge">R/</code> directory. Iâ€™ve created a single R script for each of the tools in my <code class="language-plaintext highlighter-rouge">basicPlotteR</code> package.</p>

<p>Flip! It takes a wee while to add the roxygen descriptions above each function - documentation is really important and useful though so itâ€™s worth it!</p>

<p>Once youâ€™re finished adding your functions, save the file and run the following code to update the package:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">setwd</span><span class="p">(</span><span class="n">packageDirectory</span><span class="p">)</span><span class="w">
</span><span class="n">document</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>And youâ€™re done!! ðŸŽ‰ It is amazingly straight forward and I should be doing it with all my R code.</p>

<p>Here are a few extra notes of things Iâ€™ve learnt when building my packages:</p>
<ul>
  <li>When using functions from other packages in your own functions, use the following format: <code class="language-plaintext highlighter-rouge">packageName::functionName()</code>. Also, add <code class="language-plaintext highlighter-rouge">@import packageName</code> tag into the roxygen information.</li>
  <li>For an internal function, a function that is used within your package but you donâ€™t want others to see it or use it. Remove the <code class="language-plaintext highlighter-rouge">@export</code> tag and add <code class="language-plaintext highlighter-rouge">@keywords internal</code>.</li>
  <li>To format code into roxygen function documentation lines, use the <code class="language-plaintext highlighter-rouge">\code{}</code> container</li>
  <li>If you want to attach data to your package, do the following:
    <ul>
      <li>Save each object of interest alone in a file: <code class="language-plaintext highlighter-rouge">objectName.RData</code></li>
      <li>Create a directory: <code class="language-plaintext highlighter-rouge">/data/</code> and put all the RData files in it</li>
      <li>Add roxygen information into the functions file as if it were a function using the following:
        <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cd">#' Description of the object</span><span class="w">
</span><span class="cd">#'</span><span class="w">
</span><span class="cd">#' @name objectName</span><span class="w">
</span><span class="cd">#' @docType data</span><span class="w">
</span><span class="cd">#' @author Joseph Crispell \email{crispelljoseph@@gmail.com}</span><span class="w">
</span><span class="cd">#' @keywords data</span><span class="w">
</span><span class="kc">NULL</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>Any data attached to a package can be loaded using <code class="language-plaintext highlighter-rouge">data("objectName")</code></li>
    </ul>
  </li>
</ul>

<p>I am now hosting my <code class="language-plaintext highlighter-rouge">basicPlotteR</code> R package on github (I created a <a href="https://github.com/JosephCrispell/basicPlotteR">repository</a> with all my package files in it). You can install it and give it a go with the following code:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Load the devtools library</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"devtools"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Install the basicPlotteR package</span><span class="w">
</span><span class="n">install_github</span><span class="p">(</span><span class="s2">"JosephCrispell/basicPlotteR"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>So thatâ€™s how to create an R package. Start converting your R scripts now! ðŸ˜Š</p>
:ET